name: WinBuildVS

on: workflow_dispatch

jobs:
  build:

    runs-on: windows-latest # For Linux, use ubuntu-latest
    environment: dev
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4
      
    - name: Setup VS Dev Environment
      uses: seanmiddleditch/gha-setup-vsdevenv@v4
  
#    - name: Setup msbuild
#      uses: microsoft/setup-msbuild@v1.3

    - name: Enable Developer Command Prompt           
      uses: ilammy/msvc-dev-cmd@v1.12.1
      
    - name: Set up my MinGW
      id: myMinGW
      continue-on-error: true 
      uses: e-t-l/setup-mingw@v2.2.0-e
      with:
         platform: x64
    
    - name: Install Qt5 x64
      uses: jurplel/install-qt-action@v3
      with:
          aqtversion: '==3.1.*'
          version: '5.15.2'
          host: 'windows'
      #    dir: ..
      #    arch:  ${{ matrix.qt-target }}
          arch:  'win64_msvc2019_64'
          tools: 'tools_qtcreator,qt.tools.qtcreator'
      #    cached: ${{ steps.cache-qt.outputs.cache-hit }}
          cache: true 
          
    - name: validate
      run: |
        $makepath = (Get-Childitem –Path C:\ -Recurse mingw32-make.exe -erroraction ignore | select -first 1 | Select-Object -ExpandProperty FullName)
        If ($makepath) {Copy-Item "$makepath" -Destination "C:\ProgramData\Chocolatey\lib\mingw\tools\install\mingw64\bin\mingw32-make.exe" -erroraction ignore} else {Get-Childitem –Path D:\ -Recurse mingw32-make.exe -erroraction ignore | select -first 1 | Select-Object -ExpandProperty FullName}
        If ($makepath) {Copy-Item "$makepath" -Destination "C:\ProgramData\Chocolatey\lib\mingw\tools\install\mingw64\bin\mingw32-make.exe" -erroraction ignore}
        If ($makepath) {echo $makepath} else {echo "mingw32-make.exe not found on C or D drives!"}
#        $clpath1 = (Get-Childitem –Path D:\ -Recurse cl.exe -erroraction ignore | select -first 1 | Select-Object -ExpandProperty FullName | Split-Path -Parent)
#        $Env:Path += [IO.Path]::PathSeparator + '$clpath1'
#        $clpath2 = (Get-Childitem –Path C:\ -Recurse cl.exe -erroraction ignore | select -first 1 | Select-Object -ExpandProperty FullName | Split-Path -Parent)
#        $Env:Path += [IO.Path]::PathSeparator + '$clpath2'
#        echo $clpath1
#        echo $clpath2
      continue-on-error: true 
      
    - name: qmake
      run: qmake ultracopier.pro
      continue-on-error: true 
    - name: make1
      id: make1
      run: make -i -j2
      continue-on-error: true 
#    - name: make2
#      id: make2
#      if: steps.make1.outcome != 'success'
#      run: |
#        dir
#        $mfpath = (Get-Childitem –Path ~ -Recurse makefile -erroraction ignore | select -first 1 | Select-Object -ExpandProperty FullName | Split-Path -Parent)
#        $Env:Path += [IO.Path]::PathSeparator + '$mfpath'
#        make -i -j2 makefile
#      continue-on-error: true 
      
    - uses: actions/upload-artifact@v3
      with:
        name: exes
        path: .\*.exe
